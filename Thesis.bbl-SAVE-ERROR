% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.3 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{nty/global//global/global/global}
    \entry{noauthor_ieee_2024}{article}{}{}
      \field{sortinit}{I}
      \field{sortinithash}{8d291c51ee89b6cd86bf5379f0b151d8}
      \field{labeltitlesource}{title}
      \field{abstract}{The definition of the language syntax and semantics for {SystemVerilog}, which is a unified hardware design, specification, and verification language, is provided. This standard includes support for modeling hardware at the behavioral, register transfer level ({RTL}), and gate-level abstraction levels, and for writing test benches using coverage, assertions, object-oriented programming, and constrained random verification. The standard also provides application programming interfaces ({APIs}) to foreign programming languages. (The {PDF} of this standard is available at no cost at https://ieeexplore.ieee.org/browse/standards/get-program/page compliments of Accellera Systems Initiative)}
      \field{journaltitle}{{IEEE} Std 1800-2023 (Revision of {IEEE} Std 1800-2017)}
      \field{month}{2}
      \field{title}{{IEEE} Standard for {SystemVerilog}–Unified Hardware Design, Specification, and Verification Language}
      \field{year}{2024}
      \field{dateera}{ce}
      \field{pages}{1\bibrangedash 1354}
      \range{pages}{1354}
      \verb{doi}
      \verb 10.1109/IEEESTD.2024.10458102
      \endverb
      \verb{file}
      \verb Full Text PDF:C\:\\Users\\rwiuf\\Zotero\\storage\\U9A6GXAE\\2024 - IEEE Standard for SystemVerilog–Unified Hardware Design, Specification, and Verification Language.pdf:application/pdf
      \endverb
      \verb{urlraw}
      \verb https://ieeexplore.ieee.org/document/10458102
      \endverb
      \verb{url}
      \verb https://ieeexplore.ieee.org/document/10458102
      \endverb
      \keyw{assertions,Computer languages,design automation,Design automation,design verification,Formal verification,hardware description language,Hardware design languages,{HDL},{HDVL},{IEEE} Standards,{IEEE} Std 1800™,{PLI},programming language interface,System analysis and design,{SystemVerilog},Verilog®,{VPI}}
    \endentry
    \entry{reddy_formal_2024}{article}{}{}
      \name{author}{1}{}{%
        {{hash=8b09a1f787024d2ee78e1a484ed4db99}{%
           family={Reddy},
           familyi={R\bibinitperiod},
           given={Kaushik\bibnamedelima Velapa},
           giveni={K\bibinitperiod\bibinitdelim V\bibinitperiod}}}%
      }
      \strng{namehash}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{fullhash}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{fullhashraw}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{bibnamehash}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{authorbibnamehash}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{authornamehash}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{authorfullhash}{8b09a1f787024d2ee78e1a484ed4db99}
      \strng{authorfullhashraw}{8b09a1f787024d2ee78e1a484ed4db99}
      \field{sortinit}{R}
      \field{sortinithash}{5e1c39a9d46ffb6bebd8f801023a9486}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{This article explores the evolution and effectiveness of formal verification enhanced with Assertion-Based Verification ({ABV}) as a superior alternative to traditional Universal Verification Methodology ({UVM}) in complex computing chip design. Through analysis of implementation data from major semiconductor companies, including Intel's Core i7 and {IBM}'s {POWER} processors, the article demonstrates how formal methods achieve up to 100\% coverage of critical modules compared to {UVM}'s typical 80-85\% coverage. The research presents quantitative evidence of formal verification's advantages, including a 25-30\% reduction in verification cycles, a 40\% increase in security vulnerability detection, and a 55\% reduction in overall verification time through advanced techniques such as compositional verification and proof decomposition. The article also addresses scalability challenges and resource optimization strategies, providing a comprehensive framework for implementing formal verification in modern chip design workflows.}
      \field{day}{5}
      \field{issn}{2456-3307}
      \field{journaltitle}{International Journal of Scientific Research in Computer Science, Engineering and Information Technology}
      \field{langid}{english}
      \field{month}{11}
      \field{note}{Number: 6}
      \field{number}{6}
      \field{shorttitle}{Formal Verification with {ABV}}
      \field{title}{Formal Verification with {ABV} : A Superior Alternative to {UVM} for Complex Computing Chips}
      \field{volume}{10}
      \field{year}{2024}
      \field{dateera}{ce}
      \field{pages}{90\bibrangedash 98}
      \range{pages}{9}
      \verb{doi}
      \verb 10.32628/CSEIT24106157
      \endverb
      \verb{file}
      \verb Full Text PDF:C\:\\Users\\rwiuf\\Zotero\\storage\\MTXKXWVD\\Reddy - 2024 - Formal Verification with ABV A Superior Alternative to UVM for Complex Computing Chips.pdf:application/pdf
      \endverb
      \verb{urlraw}
      \verb https://ijsrcseit.com/index.php/home/article/view/CSEIT24106157
      \endverb
      \verb{url}
      \verb https://ijsrcseit.com/index.php/home/article/view/CSEIT24106157
      \endverb
      \keyw{Assertion-Based Verification,Formal Verification,Hardware Verification,Scalability Optimization,Universal Verification Methodology}
    \endentry
  \enddatalist
\endrefsection
\endinput

